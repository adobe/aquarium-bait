---
min_packer_version: 1.7.1
variables:
  vm_name: macos-1106-ci
  out_full_path: "{{ env `PWD` }}/out"
  vmx_full_path: "{{ user `out_full_path` }}/macos-1106/macos-1106.vmx"
  aquarium_bait_stage: NONE # Used to find out the disk clone index
  username: packer
  password: packer

builders:
  - type: vmware-vmx
    vm_name: "{{ user `vm_name` }}"
    display_name: "{{ user `vm_name` }}"
    source_path: "{{ user `vmx_full_path` }}"
    linked: true # Use base image to simplify the data transfer
    attach_snapshot: original
    output_directory: "{{ user `out_full_path` }}/{{ user `vm_name` }}"
    headless: true
    boot_wait: 15s
    boot_key_interval: 10ms
    boot_command: # Disable System Integrity Protection to allow access to the disks. It will enter BIOS mode only once
      - <pageDown><up><up><up><enter><wait10s> # Choose "EFI Internal Shell"
      - FS0:<enter>vol<enter><wait> # Switch disk to "EFI" and print the label info
      - dmpstore Asr-active-config -s csr.bin<enter><wait10s> # Save the part of nvram to disk
      - hexedit c<tab><enter><wait> # Begin editing of the binary csr file
      - <right><right><right><right>63<wait10s> # Change 5th byte to 'c' (0x63) 
      - <f3>Y<wait10s> # Exit hexedit and save the file
      - dmpstore -l c<tab><enter><wait> # Load the nvram with the changed data
      - exit<enter><wait> # Exit the EFI Shell
      - <pageUp><enter> # Select "Boot Normally" menu item and run it
      - <wait2m> # Wait MacOS to boot
      - "{{ user `password` }}<enter><wait20s>" # Login to the desktop to properly install VMWare tools
    shutdown_command: "echo '{{ user `username` }}' | sudo -S shutdown -h now"
    ssh_username: "{{ user `username` }}"
    ssh_password: "{{ user `password` }}"
    ssh_timeout: 10s
    ssh_read_write_timeout: 10s
    ssh_wait_timeout: 2m
    vmx_data:
      bios.bootOrder: "hdd" # Otherwise "EFI Network" could be the last option
      bios.forceSetupOnce: "TRUE"

provisioners:
  - type: ansible
    command: ./run_ansible.sh
    user: "{{ user `username` }}"
    playbook_file: playbooks/ci_image.yml
    extra_arguments:
      - -e
      - ansible_sudo_pass={{ user `password` }}
      - -e
      - vncdo_vmx_path={{ user `out_full_path` }}/{{ user `vm_name` }}/{{ user `vm_name` }}.vmx
      - -e
      - vmtools_vm_type=vmware
      - -e
      - jre_extract_path=/opt/srv/jre8

post-processors:
  - type: shell-local # Use relative path in vmx and vmdk
    command: "empty"
    execute_command:
      - sed
      - -i.orig
      - -e
      - s|{{ user `out_full_path` }}|..|g
      - "{{ user `out_full_path` }}/{{ user `vm_name` }}/{{ user `vm_name` }}.vmx"
      - "{{ user `out_full_path` }}/{{ user `vm_name` }}/MainDisk-1-cl{{ user `aquarium_bait_stage` }}.vmdk"

  - type: shell-local # Create snapshot
    command: "empty"
    execute_command:
      - vmrun
      - snapshot
      - "{{ user `out_full_path` }}/{{ user `vm_name` }}/{{ user `vm_name` }}.vmx"
      - original
