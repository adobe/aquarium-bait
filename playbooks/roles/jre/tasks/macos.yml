---
- name: Get JRE on VM
  block:
    - name: Create archive directory
      file:
        path: /tmp/{{ jre_mac_archive_local | dirname }}
        state: directory

    - name: Get archive from the localhost files
      ignore_errors: true
      register: reg_copy_local_file
      copy:
        src: "{{ jre_mac_archive_local }}"
        dest: /tmp/{{ jre_mac_archive_local }}

    - name: Download archive if local file is not available
      when: reg_copy_local_file.failed
      delegate_to: localhost
      get_url:
        url: "{{ jre_mac_archive_url }}"
        dest: "{{ playbook_dir }}/files/{{ jre_mac_archive_local }}"
        mode: "0440"
        checksum: "{{ jre_mac_archive_checksum }}"

    - name: Get archive from the localhost files
      when: reg_copy_local_file.failed
      copy:
        src: "{{ jre_mac_archive_local }}"
        dest: /tmp/{{ jre_mac_archive_local }}

- name: Create extract directory
  become: true
  file:
    path: "{{ jre_extract_path }}"
    state: directory

# Uses BSD tar, GNU will require --wildcards in addition
- name: Unpack only bin & lib from archive to directory
  become: true
  command: >
    tar -C "{{ jre_extract_path }}" --strip-components=4 -xf "/tmp/{{ jre_mac_archive_local }}"
    "*/Contents/Home/bin" "*/Contents/Home/lib"
  args:
    warn: false  # Unarchive requires GNU tar that is not installed on macos by default
  changed_when: true

- name: Check java binary was unpacked properly
  stat:
    path: '{{ jre_extract_path }}/bin/java'
  register: reg_jre_bin_file
  failed_when: not reg_jre_bin_file.stat.exists
