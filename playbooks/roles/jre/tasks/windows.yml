---
- name: Get JRE on VM
  block:
    - name: Create archive directory
      win_file:
        path: C:\tmp\{{ jre_win_archive_local | dirname }}
        state: directory

    - name: Get archive from the localhost files
      ignore_errors: true
      register: reg_copy_local_file
      win_copy:
        src: "{{ jre_win_archive_local }}"
        dest: C:\tmp\{{ jre_win_archive_local }}

    - name: Download archive if local file is not available
      when: reg_copy_local_file.failed
      delegate_to: localhost
      win_get_url:
        url: "{{ jre_win_archive_url }}"
        dest: "{{ playbook_dir }}/files/{{ jre_win_archive_local }}"
        mode: "0440"
        checksum: "{{ jre_win_archive_checksum }}"

    - name: Get archive from the localhost files
      when: reg_copy_local_file.failed
      win_copy:
        src: "{{ jre_win_archive_local }}"
        dest: C:\tmp\{{ jre_win_archive_local }}

- name: Create JRE unpack directory
  win_file:
    path: "{{ jre_extract_path }}"
    state: directory

# Uses BSD tar, GNU will require --wildcards in addition
- name: Unpack only bin & lib from archive to directory
  changed_when: true
  win_shell: >
    tar -C "{{ jre_extract_path }}" --strip-components=1 -xf 'C:/tmp/{{ jre_win_archive_local }}'
    "*/bin" "*/lib"
  args:
    warn: false  # Unarchive requires GNU tar that is not installed on windows by default

- name: Check java binary was unpacked properly
  win_stat:
    path: '{{ jre_extract_path }}\bin\java.exe'
  register: reg_jre_bin_file
  failed_when: not reg_jre_bin_file.stat.exists
