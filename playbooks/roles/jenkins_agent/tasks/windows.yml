---
- name: Require NSSM
  import_role:
    name: nssm

- name: Add jenkins group
  win_group:
    name: jenkins-group
    description: Jenkins group
    state: present

- name: Generate random jenkins user password to use in service
  set_fact:
    jenkins_user_pwd: "{{ lookup('password', '/dev/null length=32') }}"

- name: Add user jenkins with group jenkins
  win_user:
    name: jenkins
    password: '{{ jenkins_user_pwd }}'
    fullname: jenkins
    password_never_expires: true
    account_disabled: false
    groups:
      - jenkins-group

- name: Set jenkins user permissions
  win_user_right:
    name: '{{ item }}'
    users:
      - jenkins
  loop:
    - SeDenyRemoteInteractiveLogonRight
    - SeServiceLogonRight

- name: Create extract directory
  win_file:
    path: "{{ jenkins_agent_path }}"
    state: directory

- name: Create user profile dirs
  win_user_profile:
    username: jenkins

- name: Store jenkins agent executable scripts
  win_copy:
    src: win/jenkins_agent.ps1
    dest: '{{ jenkins_agent_path }}\jenkins_agent.ps1'

- name: Create service to run jenkins agent
  win_nssm:
    executable: C:\util\nssm\nssm.exe
    name: jenkins_agent
    working_directory: C:\Users\jenkins
    application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
    stdout_file: C:\Users\jenkins\agent.log
    stderr_file: C:\Users\jenkins\agent.log
    arguments:
      - -ExecutionPolicy
      - Bypass
      - -NoProfile
      - -f
      - '{{ jenkins_agent_path }}\jenkins_agent.ps1'

- name: Set environment variables for jenkins_agent nssm service
  win_command: >
    C:\util\nssm\nssm.exe set jenkins_agent AppEnvironmentExtra
    "JAVA_HOME={{ jenkins_agent_java_home }}"
    "CONFIG_URL={{ jenkins_agent_config_url }}"

- name: Configure the jenkins_agent service
  win_service:
    name: jenkins_agent
    username: jenkins
    password: '{{ jenkins_user_pwd }}'
    dependencies:
      - tcpip
    start_mode: auto
    state: stopped
